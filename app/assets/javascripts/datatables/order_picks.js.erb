//=require_self

function toggleChecked(status) {
    $(".check_pick_order").each(function () {
        $(this).attr("checked", status);
    })
}

/* Formating function for row details */
function fnFormatDetails(oTable, nTr) {
    var aData = oTable.fnGetData(nTr);
    var id = $(aData[0]).attr('value');
    var sOut;

    $.ajax({
        type: 'GET',
        url: '/order_details/' + id + '.json',
        success: function (result) {
            sOut = order_details(result);
            oTable.fnOpen(nTr, sOut, 'details');
        },
        failure: function (result) {
            $('#pnl_results').html('<p>Error getting order details</p>');
        },
        dataType: "json"
    });

}

function create_table_row() {
    var table_row = '<tr>';

    for (var i = 0; i < arguments.length; i++) {
        table_row += '<td>' + arguments[i] + '</td>';
    }

    table_row += '</tr>';
    return table_row;
}

function create_table_header_row() {
    var table_row = '<tr>';
    table_row += '<th style="width: 15%">SKU</th>';
    table_row += '<th style="width: 25%">Description</th>';
    table_row += '<th style="width: 20%">Colour</th>';
    table_row += '<th style="width: 20%">Size</th>';
    table_row += '<th style="width: 10%">Qty Ord.</th>';
    table_row += '<th style="width: 10%">Qty Pkd.</th>';
    table_row += '</tr>';
    return table_row;
}


function order_details(data) {
    var tran_panel;
    tran_panel = '<table>';
    tran_panel += '<tbody>';

    var header_row
    header_row = create_table_header_row();

    tran_panel += header_row;
    if (data.length > 0) {
        $.each(data, function (i, j) {
            tran_panel +=
                    create_table_row(
                            j.item.sku,
                            j.item.name,
                            (j.item.colour ? j.item.colour : ''),
                            (j.item.size ? j.item.size : ''),
                            j.quantity_ordered,
                            j.quantity_picked
                    )
        });
    }
    tran_panel += '</tbody>';
    tran_panel += '</table>';

    return tran_panel;
}


$(document).ready(function () {

    $('.pick_select_none').bind('click', function () {
        toggleChecked(false);
    });

    $('.pick_select_all').bind('click', function () {
        toggleChecked(true);
    });

    $('.print_pick_notes').bind('click', function () {
        var selected = new Array();
        $('input:checked').each(function () {
            selected.push($(this).attr('value'));
        });
        $url = '/reports/pick_notes?';
        $url += $.param({order_ids: selected});
        window.location = $url
    });


    var oTable = $('#order_picks').dataTable({
        "sPaginationType": "full_numbers",
        "bJQueryUI": true,
        "bFilter": true,
        "bProcessing": true,
        "bServerSide": true,
        "iDisplayLength": 50,
        "aaSorting": [
            [1, 'desc']
        ],
        "sAjaxSource": $('#order_picks').data('source'),
        "aoColumns": [
            {
                "bSortable": false,
                "sWidth": "5%"
            },
            {
                "bSortable": true,
                "sWidth": "20%"
            },
            {
                "bSortable": true,
                "sWidth": "20%"
            },
            {
                "bSortable": true,
                "sWidth": "25%"
            },
            {
                "bSortable": false,
                "sWidth": "6%"
            },
            {
                "bSortable": false,
                "sWidth": "6%"
            },
            {
                "bSortable": false,
                "sWidth": "6%"
            },
            {
                "bSortable": false,
                "sWidth": "6%"
            },
            {
                "bSortable": false,
                "sWidth": "6%"
            },
            {
                "bSortable": false,
                "sWidth": "15%"
            }
        ]
    }).fnSetFilteringDelay();

    /* Add event listener for opening and closing details
     * Note that the indicator for showing which row is open is not controlled by DataTables,
     * rather it is done here
     */
    $('#order_picks tbody td:gt(0)').live('click', function () {
        var nTr = $(this).parents('tr')[0];
        if (oTable.fnIsOpen(nTr)) {
            /* This row is already open - close it */
            this.src = "<%= asset_path 'details_open.png' %>";
            oTable.fnClose(nTr);
        }
        else {
            /* Open this row */
            this.src = "<%= asset_path 'details_close.png' %>";
            fnFormatDetails(oTable, nTr)
        }
    });
});





